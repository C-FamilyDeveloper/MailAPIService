// <auto-generated />
using System;
using MailAPIService.Models.DataContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MailAPIService.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MailAPIService.Models.DataEntities.MailLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FailedMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MailDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MailResult")
                        .HasColumnType("int");

                    b.Property<int>("MessageRecipientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MessageRecipientId")
                        .IsUnique();

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("MailAPIService.Models.DataEntities.MailMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MailAPIService.Models.DataEntities.MessageRecipient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.Property<int>("RecipientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.HasIndex("RecipientId");

                    b.ToTable("MessagesRecipients");
                });

            modelBuilder.Entity("MailAPIService.Models.DataEntities.Recipient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recipients");
                });

            modelBuilder.Entity("MailAPIService.Models.DataEntities.MailLog", b =>
                {
                    b.HasOne("MailAPIService.Models.DataEntities.MessageRecipient", "MessageRecipient")
                        .WithOne("Log")
                        .HasForeignKey("MailAPIService.Models.DataEntities.MailLog", "MessageRecipientId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("MessageRecipient");
                });

            modelBuilder.Entity("MailAPIService.Models.DataEntities.MessageRecipient", b =>
                {
                    b.HasOne("MailAPIService.Models.DataEntities.MailMessage", "Message")
                        .WithMany("MessageRecipients")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("MailAPIService.Models.DataEntities.Recipient", "MailRecipient")
                        .WithMany("MessageRecipients")
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("MailRecipient");

                    b.Navigation("Message");
                });

            modelBuilder.Entity("MailAPIService.Models.DataEntities.MailMessage", b =>
                {
                    b.Navigation("MessageRecipients");
                });

            modelBuilder.Entity("MailAPIService.Models.DataEntities.MessageRecipient", b =>
                {
                    b.Navigation("Log")
                        .IsRequired();
                });

            modelBuilder.Entity("MailAPIService.Models.DataEntities.Recipient", b =>
                {
                    b.Navigation("MessageRecipients");
                });
#pragma warning restore 612, 618
        }
    }
}
